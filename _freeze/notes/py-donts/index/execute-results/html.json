{
  "hash": "5c5c0c0414326ff53f52ac1379cbc07e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"\"\ndescription: My notes & review of [Py Donts](https://mathspp.com/books/pydonts) by Rodrigo Girão Serrão \nauthor: \"Tyler Hillery\"\ndate: \"2025-02-11\"\nimage: \"./cover.png\"\nfilters:\n    - social-share\nshare:\n    permalink: \"https://tylerhillery.com/notes/py-donts\"\n    description:\n    twitter: true\n    facebook: false\n    reddit: true\n    stumble: false\n    tumblr: false\n    linkedin: true\n    email: true\n    mastodon: true\ncategories: [Technical Books]\njupyter: python3\n---\n\n\n\n\n------------------------------------------------------------------------\n\n# Notes\n\n## Zip Up\n\n- `zip` goes until the shortest of the iterators provided\n- In Python 3.10> you can use a `strict` keyword to error if the length of iterators don't match\n\n::: {#f7a776d4 .cell execution_count=1}\n``` {.python .cell-code}\nfirsts = [\"Tyler\", \"Chandra\"]\nlasts = [\"Hillery\", \"Hillery\", \"Hill\"]\n\ntry:\n    for z in zip(firsts, lasts, strict=True):\n        print(z)\nexcept Exception as e:\n    print(e)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n('Tyler', 'Hillery')\n('Chandra', 'Hillery')\nzip() argument 2 is longer than argument 1\n```\n:::\n:::\n\n\n- The error doesn't occur until the end when the mismatch occurs because zip is lazily evaluated\n- Interesting, you can use `zip` inside `dict` to make key,value pair of the iterators passed in\n\n## Chaining comparison operators\n\n- Pitfall to watch out for is chaining `!=` together. \n\n::: {#92a91ae9 .cell execution_count=2}\n``` {.python .cell-code}\na = c = 1\nb = 2\nif a != b != c:\n    print(\"a, b, and c are all different: \", a, b, c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\na, b, and c are all different:  1 2 1\n```\n:::\n:::\n\n\n- `a != b != c` really evaluates to `a != b` and `b != c` it doesn't tell you anything about a relates to c. Stick with chaining comparison operators on **transitive** operations\n\n## Boolean short-circuiting\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}